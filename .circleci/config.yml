version: 2.1

orbs:
  docker-publish: circleci/docker-publish@0.1.7
  node: circleci/node@1.1.6

references:
  workspace_root: &workspace_root /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

aliases:
- &install
  name: Install dependencies
  command: yarn
- &test
  name: Test
  command: yarn test
- &build
  name: Build
  command: yarn build
- &google-sdk-container-config
  docker:
    - image: google/cloud-sdk:alpine
      auth:
        username: $DOCKERHUB_LOGIN
        password: $DOCKERHUB_PASSWORD
- &GCP-auth-docker
  name: GCP authentication with docker
  command: |
    echo $DOCKER_PASSWORD > ${HOME}/account-auth.json
- &tag-git-version
  name: Tag git commit with build version and push to github
  command: |
    git config --global user.email "circleci@entur.no"
    git config --global user.name "circleci"
    git tag $VERSION
    git push origin $VERSION
- &create-image-version
  name: Create new image version and store to env var and as file in workspace
  command: |
    echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
    echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
- &docker-build-and-push
  name: Docker build and push
  command: |
    IMAGE="eu.gcr.io/entur-system-1287/$CIRCLE_PROJECT_REPONAME"
    echo "Image: ${IMAGE}"
    docker build -t $IMAGE --build-arg ARTIFACTORY_USER=$ARTIFACTORY_USER --build-arg ARTIFACTORY_PASSWORD=$ARTIFACTORY_PASSWORD .
    docker tag $IMAGE "${IMAGE}":"${VERSION}"
    docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/account-auth.json
    docker push "${IMAGE}":"${VERSION}"

jobs:
  build:
    docker:
      - image: cimg/node:14.16.1
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
    steps:
      - *attach_workspace
      - checkout
      - restore_cache:
          keys:
            - dep-cache-v1-{{ checksum "yarn.lock" }}
            - dep-cache-v1-
      - run: *install
      - save_cache:
          paths:
            - ~/project/node_modules
          key: dep-cache-v1-{{ checksum "yarn.lock" }}
      - run: *test
      - run: *build
      - run:
          name: 'Persist built files'
          command: |
            set -exu
            mv build /tmp/workspace/
            mv node_modules /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build/*
            - node_modules/*

  deploy-docker:
    <<: *google-sdk-container-config
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
      - *attach_workspace
      - run: |
          mv /tmp/workspace/build .
          mv /tmp/workspace/node_modules .
      - run: *GCP-auth-docker
      - run: *create-image-version
      - run: *docker-build-and-push
      - run: *tag-git-version

workflows:
  'Build Pipeline':
    jobs:
      - build
      - deploy-docker:
          context: global
          requires:
            - build
          filters:
            branches:
              only: master
